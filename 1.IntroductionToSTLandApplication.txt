Containers:-
  ->Simple: pair,vector,forward_list,list
  ->Container Adapters: stack,queue,priority_queue
  ->Associative: set,map,unordered_set,unordered_map
  
 Algorithms:-binary_search,find,reverse,sort,...
  ___   ___   ___   ___   ___    
 |___| |___| |___| |___| |___|     |    =>sort(arr,arr+n) arr+n is the index after the last element        
  arr                   arr+n-1  arr+n
   ___   ___   ___   ___   ___
  |___| |___| |___| |___| |___|   |     =>sort(v.begin(),v.end()) v.end() points to the index after the last element  // [begin(),end()) begin is included and end 
  begin                          end()                                                                                   is excluded
  
Example:-
#include<iostream>
#include<algorithm>

using namespace std;

int main(){
    int arr[]={10,15,8,20};
    
    sort(arr,arr+4);

    for(int i=0;i<4;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;

    if(binary_search(arr,arr+4,8))
      cout<<"Present";
    else
     cout<<"Not Present";
     
}
